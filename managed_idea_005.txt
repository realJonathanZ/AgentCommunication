Recording some idea after example 005 is done and before example 006.

Just think about the path leading to 2 realization: (relating to google places API)
1. ai's Checking user input to feed to script.
2. ai's finalizing result before search result is about to recorded in txt output.

For the workflow of (1): (tentative)
User typing in search keyword --> 
script (in execution) extracting key-keyword (location? General catagory?) -->
ai inspect any key point -->

Providing location-specified search?

e.g. If user at Saskatoon search "gym Torondo", the searching range should be constraint outside Sasktoon.
At this point it is sure that there is a way to pass location as some kind of para(sort of longitude and latitude as well) [await implement, the unused function..]

Generate close search keyword for additional search?
e.g. If user search "Bruh sheep industry", will ai generate search(await in sequence) about "Bruh sheep co." as well? (amd others)

There should be more...

-->
The search is performed.


For the workflow of (2): (tentative)
If we don't interrupt the current workflow.. And think of a primary solution
After the search is done, my results are inside this txt.
The sections are divided by empty line. The ai check the exisitng section one by one, differentiate them in 2(or more) piles.
e.g. percise_result.txt and prolly_trash_result.txt

If checking it one by one, without utility of batch processing and concurrency handlement:
3 seconds checking time of each result section (plus the request/response time?)
*Too bruh for large data set.

solution 2: (tantative)
Pre-saving the constraint of the 'game' "Is __ probably considered closely as a result of user-search-keyword __ ?" into context of model in use.
Using batch processing size of "3"
e.g "Is __ probably considered closely as a result of user-search-keyword __ ?" --defined as constraint/rule for the model
Then, provide paras ["Tim-Hortons ...", "bro Fitness ...", "World Gym Sunridge ..."] and "gym". (with each element in that array given as a info set including all attributes..)
Then somehow some function(from ai api) will return [False, True , True] that's for later use.
Then, later 2 is saved in results and the first one is saved in another txt.

(Python thread?) Is it possible to handle 10 such cases similar to above at the same time?

